interface IconProps {
  className?: string;
  width?: number;
  height?: number;
}
export const EtherIcon: React.FunctionComponent<IconProps> = ({
  className,
  width,
  height,
}) => {
  return (
    <svg
      className={className}
      width={width}
      height={height}
      viewBox="0 0 24 24"
      fill="#9075FE"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M11.9441 17.97L4.58008 13.62L11.9431 24L19.3131 13.62L11.9411 17.97H11.9441ZM12.0561 0L4.69008 12.223L12.0551 16.577L19.4201 12.227L12.0561 0Z" />
    </svg>
  );
};
export const BscIcon: React.FunctionComponent<IconProps> = ({
  className,
  width,
  height,
}) => {
  return (
    <svg
      className={className}
      width={width}
      height={height}
      viewBox="0 0 24 24"
      fill="#636977"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clipPath="url(#clip0_1425_1315)">
        <path d="M14.8661 19.345C14.9987 19.5747 15.0346 19.8476 14.966 20.1038C14.8973 20.36 14.7297 20.5784 14.5001 20.711L13.2501 21.433C12.87 21.6524 12.4389 21.7679 12.0001 21.7679C11.5612 21.7679 11.1301 21.6524 10.7501 21.433L9.50005 20.71C9.27225 20.5764 9.10651 20.3582 9.03902 20.1029C8.97152 19.8476 9.00774 19.576 9.13978 19.3473C9.27182 19.1186 9.48895 18.9514 9.74379 18.8822C9.99863 18.8131 10.2705 18.8475 10.5001 18.978L11.7501 19.7C11.8261 19.7439 11.9123 19.767 12.0001 19.767C12.0878 19.767 12.174 19.7439 12.2501 19.7L13.5001 18.978C13.7297 18.8454 14.0027 18.8095 14.2589 18.8781C14.515 18.9467 14.7334 19.1153 14.8661 19.345ZM19.7941 11.119C20.0593 11.119 20.3136 11.2243 20.5012 11.4119C20.6887 11.5994 20.7941 11.8538 20.7941 12.119V15.634C20.794 16.0728 20.6785 16.5039 20.4591 16.884C20.2397 17.264 19.9241 17.5796 19.5441 17.799L16.5001 19.557C16.3863 19.6227 16.2607 19.6653 16.1304 19.6824C16.0001 19.6995 15.8678 19.6908 15.7409 19.6568C15.614 19.6227 15.4951 19.564 15.3909 19.484C15.2866 19.404 15.1992 19.3043 15.1336 19.1905C15.0679 19.0767 15.0253 18.9511 15.0082 18.8208C14.9911 18.6906 14.9998 18.5582 15.0338 18.4313C15.0678 18.3044 15.1265 18.1855 15.2065 18.0813C15.2865 17.9771 15.3863 17.8897 15.5001 17.824L18.5441 16.067C18.6201 16.0231 18.6832 15.96 18.7271 15.884C18.7709 15.808 18.7941 15.7218 18.7941 15.634V12.119C18.7941 11.8538 18.8994 11.5994 19.0869 11.4119C19.2745 11.2243 19.5288 11.119 19.7941 11.119ZM4.20605 11.119C4.47127 11.119 4.72563 11.2243 4.91316 11.4119C5.1007 11.5994 5.20605 11.8538 5.20605 12.119V15.634C5.20606 15.7218 5.22916 15.808 5.27305 15.884C5.31693 15.96 5.38005 16.0231 5.45605 16.067L8.50005 17.824C8.72786 17.9575 8.8936 18.1758 8.96109 18.4311C9.02859 18.6864 8.99237 18.958 8.86033 19.1867C8.72829 19.4154 8.51116 19.5826 8.25632 19.6517C8.00148 19.7209 7.72961 19.6865 7.50005 19.556L4.45605 17.8C4.07602 17.5806 3.76043 17.265 3.54101 16.885C3.32159 16.5049 3.20607 16.0738 3.20605 15.635V12.12C3.20605 11.8548 3.31141 11.6004 3.49895 11.4129C3.68648 11.2253 3.94084 11.119 4.20605 11.119ZM15.6251 7.46499L15.7441 7.52199L17.2571 8.37999C17.3943 8.45792 17.5111 8.56722 17.5981 8.69897C17.685 8.83071 17.7394 8.98115 17.7571 9.13799L17.7631 9.25799L17.7501 10.998C17.7487 11.1522 17.7118 11.3041 17.642 11.4416C17.5723 11.5792 17.4717 11.6988 17.3481 11.791L17.2501 11.856L14.5001 13.444V16.62C14.5001 16.7744 14.4643 16.9267 14.3956 17.065C14.3269 17.2032 14.2271 17.3237 14.1041 17.417L14.0061 17.483L12.5061 18.363C12.3722 18.4415 12.222 18.4878 12.0671 18.4982C11.9123 18.5086 11.7572 18.4829 11.6141 18.423L11.4941 18.363L9.99406 17.483C9.86075 17.4047 9.74739 17.2967 9.66289 17.1672C9.57839 17.0378 9.52505 16.8905 9.50705 16.737L9.50005 16.62V13.443L6.75005 11.856C6.61631 11.7787 6.50229 11.6715 6.41693 11.5428C6.33156 11.414 6.27719 11.2673 6.25805 11.114L6.25005 10.997L6.23705 9.25699C6.23603 9.09938 6.27227 8.94376 6.34283 8.80282C6.41338 8.66188 6.51626 8.53961 6.64305 8.44599L6.74305 8.37999L8.25705 7.52199C8.38915 7.44697 8.53659 7.40302 8.68821 7.39349C8.83982 7.38396 8.99161 7.4091 9.13205 7.46699L9.25005 7.52599L12.0001 9.11299L14.7501 7.52599C14.8817 7.45 15.0289 7.40501 15.1805 7.39444C15.3321 7.38387 15.4842 7.408 15.6251 7.46499ZM17.6291 13.27V14.673C17.629 14.8485 17.5828 15.021 17.4951 15.173C17.4073 15.325 17.2811 15.4512 17.1291 15.539L15.9141 16.24C15.8684 16.2663 15.8167 16.2802 15.764 16.2802C15.7113 16.2802 15.6596 16.2663 15.614 16.2399C15.5684 16.2136 15.5305 16.1757 15.5042 16.1301C15.4779 16.0844 15.464 16.0327 15.4641 15.98V14.577C15.4641 14.4015 15.5103 14.229 15.598 14.077C15.6858 13.925 15.812 13.7988 15.9641 13.711L17.1791 13.01C17.2247 12.9837 17.2764 12.9698 17.3291 12.9698C17.3818 12.9698 17.4335 12.9837 17.4791 13.01C17.5247 13.0364 17.5626 13.0743 17.5889 13.1199C17.6153 13.1656 17.6291 13.2173 17.6291 13.27ZM6.75905 12.983L6.82105 13.01L8.03606 13.711C8.17086 13.7889 8.28562 13.8971 8.37121 14.0271C8.4568 14.1572 8.51085 14.3054 8.52906 14.46L8.53606 14.577V15.98C8.53613 16.027 8.52514 16.0735 8.50397 16.1155C8.48279 16.1575 8.45203 16.194 8.41416 16.2219C8.3763 16.2498 8.33239 16.2685 8.28599 16.2763C8.23959 16.2841 8.19199 16.281 8.14706 16.267L8.08606 16.24L6.87105 15.539C6.73638 15.4612 6.62169 15.3531 6.53611 15.2233C6.45053 15.0934 6.39641 14.9454 6.37805 14.791L6.37105 14.673V13.27C6.3709 13.2283 6.37943 13.1871 6.3961 13.1488C6.41278 13.1106 6.43723 13.0763 6.46791 13.0481C6.49858 13.0199 6.5348 12.9984 6.57425 12.9849C6.6137 12.9715 6.65553 12.9664 6.69705 12.97L6.76006 12.983H6.75905ZM18.2491 5.45299L19.5441 6.20099C19.9241 6.42041 20.2397 6.73599 20.4591 7.11603C20.6785 7.49606 20.794 7.92716 20.7941 8.36599V9.80899C20.7941 10.0742 20.6887 10.3286 20.5012 10.5161C20.3136 10.7036 20.0593 10.809 19.7941 10.809C19.5288 10.809 19.2745 10.7036 19.0869 10.5161C18.8994 10.3286 18.7941 10.0742 18.7941 9.80899V8.36599C18.7941 8.27823 18.7709 8.19201 18.7271 8.116C18.6832 8.03999 18.6201 7.97688 18.5441 7.93299L17.2491 7.18499C17.0212 7.05144 16.8555 6.83321 16.788 6.57791C16.7205 6.32261 16.7567 6.05099 16.8888 5.8223C17.0208 5.59361 17.2379 5.42643 17.4928 5.35724C17.7476 5.28806 18.0195 5.32248 18.2491 5.45299ZM7.07205 5.84499C7.20466 6.07467 7.24059 6.34762 7.17195 6.60379C7.10332 6.85996 6.93573 7.07838 6.70605 7.21099L5.45605 7.93299C5.38005 7.97688 5.31693 8.03999 5.27305 8.116C5.22916 8.19201 5.20606 8.27823 5.20605 8.36599V9.80899C5.20605 10.0742 5.1007 10.3286 4.91316 10.5161C4.72563 10.7036 4.47127 10.809 4.20605 10.809C3.94084 10.809 3.68648 10.7036 3.49895 10.5161C3.31141 10.3286 3.20605 10.0742 3.20605 9.80899V8.36599C3.20589 7.92699 3.32133 7.49569 3.54076 7.11546C3.76019 6.73523 4.07587 6.41949 4.45605 6.19999L5.70605 5.47799C5.93573 5.34539 6.20868 5.30946 6.46485 5.37809C6.72103 5.44673 6.93944 5.61532 7.07205 5.84499ZM12.5001 5.78999L13.7151 6.49099C13.7608 6.5173 13.7987 6.55518 13.8251 6.60083C13.8515 6.64647 13.8654 6.69827 13.8654 6.75099C13.8654 6.80372 13.8515 6.85551 13.8251 6.90116C13.7987 6.9468 13.7608 6.98469 13.7151 7.01099L12.5001 7.70999C12.348 7.79776 12.1756 7.84397 12.0001 7.84397C11.8245 7.84397 11.6521 7.79776 11.5001 7.70999L10.2851 7.00899C10.2394 6.98269 10.2014 6.9448 10.175 6.89916C10.1486 6.85351 10.1347 6.80172 10.1347 6.74899C10.1347 6.69627 10.1486 6.64447 10.175 6.59883C10.2014 6.55318 10.2394 6.5153 10.2851 6.48899L11.5001 5.78999C11.6521 5.70222 11.8245 5.65602 12.0001 5.65602C12.1756 5.65602 12.348 5.70222 12.5001 5.78999ZM13.2501 2.56799L16.2941 4.32499C16.5239 4.4576 16.6916 4.67607 16.7603 4.93234C16.829 5.18861 16.7932 5.46168 16.6606 5.69149C16.5279 5.9213 16.3095 6.08902 16.0532 6.15775C15.7969 6.22649 15.5239 6.1906 15.2941 6.05799L12.2501 4.29899C12.174 4.25511 12.0878 4.232 12.0001 4.232C11.9123 4.232 11.8261 4.25511 11.7501 4.29899L8.70606 6.05599C8.59228 6.12269 8.46644 6.16622 8.33578 6.18409C8.20512 6.20196 8.07221 6.1938 7.94471 6.16009C7.81721 6.12638 7.69764 6.06779 7.59288 5.98768C7.48811 5.90757 7.40023 5.80753 7.33429 5.69332C7.26835 5.57911 7.22565 5.45298 7.20865 5.3222C7.19165 5.19142 7.20069 5.05857 7.23524 4.9313C7.2698 4.80403 7.32919 4.68485 7.40999 4.58062C7.49079 4.47639 7.59141 4.38917 7.70605 4.32399L10.7501 2.56699C11.1301 2.34757 11.5612 2.23206 12.0001 2.23206C12.4389 2.23206 12.87 2.34757 13.2501 2.56699V2.56799Z" />
      </g>
      <defs>
        <clipPath id="clip0_1425_1315">
          <rect width="24" height="24" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};
export const PolygonIcon: React.FunctionComponent<IconProps> = ({
  className,
  width,
  height,
}) => {
  return (
    <svg
      className={className}
      width={width}
      height={height}
      viewBox="0 0 24 24"
      fill="#636977"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M16.3608 9.06714C16.0509 8.88804 15.6524 8.88804 15.2983 9.06714L12.8191 10.5448L11.1368 11.4851L8.7019 12.9627C8.39201 13.1418 7.99357 13.1418 7.6394 12.9627L5.73576 11.7985C5.42586 11.6194 5.20451 11.2612 5.20451 10.8582V8.61938C5.20451 8.26117 5.38159 7.90296 5.73576 7.67908L7.6394 6.55968C7.9493 6.38057 8.34774 6.38057 8.7019 6.55968L10.6055 7.72386C10.9154 7.90296 11.1368 8.26117 11.1368 8.66416V10.1418L12.8191 9.15669V7.6343C12.8191 7.2761 12.642 6.91789 12.2878 6.69401L8.74617 4.58953C8.43628 4.41042 8.03784 4.41042 7.68367 4.58953L4.05347 6.73878C3.6993 6.91789 3.52222 7.2761 3.52222 7.6343V11.8433C3.52222 12.2015 3.6993 12.5597 4.05347 12.7836L7.6394 14.888C7.9493 15.0671 8.34774 15.0671 8.7019 14.888L11.1368 13.4552L12.8191 12.4701L15.254 11.0373C15.5639 10.8582 15.9623 10.8582 16.3165 11.0373L18.2201 12.1567C18.53 12.3358 18.7514 12.694 18.7514 13.097V15.3358C18.7514 15.694 18.5743 16.0522 18.2201 16.2761L16.3608 17.3955C16.0509 17.5746 15.6524 17.5746 15.2983 17.3955L13.3946 16.2761C13.0847 16.097 12.8634 15.7388 12.8634 15.3358V13.903L11.1811 14.888V16.3656C11.1811 16.7239 11.3582 17.0821 11.7123 17.3059L15.2983 19.4104C15.6082 19.5895 16.0066 19.5895 16.3608 19.4104L19.9467 17.3059C20.2566 17.1268 20.4779 16.7686 20.4779 16.3656V12.1119C20.4779 11.7537 20.3009 11.3955 19.9467 11.1716L16.3608 9.06714Z" />
    </svg>
  );
};
export const ProfileIcon: React.FunctionComponent<IconProps> = ({
  className,
  width,
  height,
}) => {
  return (
    <svg
      className={className}
      width={width}
      height={height}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clipPath="url(#clip0_1498_2147)">
        <path
          d="M11.5 12.5C12.8807 12.5 14 11.3807 14 10C14 8.61929 12.8807 7.5 11.5 7.5C10.1193 7.5 9 8.61929 9 10C9 11.3807 10.1193 12.5 11.5 12.5Z"
          stroke="#9075FE"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M14.81 15.25C13.8963 14.4429 12.7191 13.9975 11.5 13.9975C10.2809 13.9975 9.10374 14.4429 8.19 15.25M18 15V17C18 17.2652 17.8946 17.5196 17.7071 17.7071C17.5196 17.8946 17.2652 18 17 18H15M15 5H17C17.2652 5 17.5196 5.10536 17.7071 5.29289C17.8946 5.48043 18 5.73478 18 6V8M5 8V6C5 5.73478 5.10536 5.48043 5.29289 5.29289C5.48043 5.10536 5.73478 5 6 5H8M8 18H6C5.73478 18 5.48043 17.8946 5.29289 17.7071C5.10536 17.5196 5 17.2652 5 17V15"
          stroke="#9075FE"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </g>
      <defs>
        <clipPath id="clip0_1498_2147">
          <rect
            width="15"
            height="15"
            fill="white"
            transform="translate(4 4)"
          />
        </clipPath>
      </defs>
    </svg>
  );
};
export const BackIcon: React.FunctionComponent<IconProps> = ({
  className,
  width,
  height,
}) => {
  return (
    <svg
      className={className}
      width={width}
      height={height}
      viewBox="0 0 24 25"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M9 11.5L5 15.5M5 15.5L9 19.5M5 15.5H16C17.0609 15.5 18.0783 15.0786 18.8284 14.3284C19.5786 13.5783 20 12.5609 20 11.5C20 10.4391 19.5786 9.42172 18.8284 8.67157C18.0783 7.92143 17.0609 7.5 16 7.5H15"
        stroke="#9075FE"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};
export const NFTIcon: React.FunctionComponent<IconProps> = ({
  className,
  width,
  height,
}) => {
  return (
    <svg
      className={className}
      width={width}
      height={height}
      viewBox="0 0 22 19"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M3 13C2.16667 13 1.45833 12.7083 0.875 12.125C0.291667 11.5417 0 10.8333 0 10C0 9.16667 0.291667 8.45833 0.875 7.875C1.45833 7.29167 2.16667 7 3 7V5C3 4.45 3.196 3.979 3.588 3.587C3.98 3.195 4.45067 2.99933 5 3H8C8 2.16667 8.29167 1.45833 8.875 0.875C9.45833 0.291667 10.1667 0 11 0C11.8333 0 12.5417 0.291667 13.125 0.875C13.7083 1.45833 14 2.16667 14 3H17C17.55 3 18.021 3.196 18.413 3.588C18.805 3.98 19.0007 4.45067 19 5V7C19.8333 7 20.5417 7.29167 21.125 7.875C21.7083 8.45833 22 9.16667 22 10C22 10.8333 21.7083 11.5417 21.125 12.125C20.5417 12.7083 19.8333 13 19 13V17C19 17.55 18.804 18.021 18.412 18.413C18.02 18.805 17.5493 19.0007 17 19H5C4.45 19 3.979 18.804 3.587 18.412C3.195 18.02 2.99933 17.5493 3 17V13ZM8 11C8.41667 11 8.771 10.854 9.063 10.562C9.355 10.27 9.50067 9.916 9.5 9.5C9.5 9.08333 9.354 8.729 9.062 8.437C8.77 8.145 8.416 7.99933 8 8C7.58333 8 7.229 8.146 6.937 8.438C6.645 8.73 6.49933 9.084 6.5 9.5C6.5 9.91667 6.646 10.271 6.938 10.563C7.23 10.855 7.584 11.0007 8 11ZM14 11C14.4167 11 14.771 10.854 15.063 10.562C15.355 10.27 15.5007 9.916 15.5 9.5C15.5 9.08333 15.354 8.729 15.062 8.437C14.77 8.145 14.416 7.99933 14 8C13.5833 8 13.229 8.146 12.937 8.438C12.645 8.73 12.4993 9.084 12.5 9.5C12.5 9.91667 12.646 10.271 12.938 10.563C13.23 10.855 13.584 11.0007 14 11ZM7 15H15V13H7V15ZM5 17H17V5H5V17Z"
        fill="#A3A9B9"
      />
    </svg>
  );
};
export const DownIcon: React.FunctionComponent<IconProps> = ({
  className,
  width,
  height,
}) => {
  return (
    <svg
      className={className}
      width={width}
      height={height}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g filter="url(#filter0_d_1645_2)">
        <path
          d="M16.375 6.21991L12 9.71791L7.625 6.21791C7.47784 6.10009 7.30037 6.02626 7.11306 6.00495C6.92576 5.98363 6.73624 6.0157 6.56637 6.09745C6.3965 6.17919 6.25319 6.30729 6.15298 6.46697C6.05277 6.62664 5.99974 6.8114 6 6.99991V12.9999C6.00009 13.1497 6.03384 13.2976 6.09875 13.4326C6.16366 13.5676 6.25806 13.6863 6.375 13.7799L11.375 17.7799C11.5524 17.9219 11.7728 17.9993 12 17.9993C12.2272 17.9993 12.4476 17.9219 12.625 17.7799L17.625 13.7799C17.7419 13.6863 17.8363 13.5676 17.9013 13.4326C17.9662 13.2976 17.9999 13.1497 18 12.9999V6.99991C17.9999 6.81157 17.9466 6.62708 17.8462 6.4677C17.7459 6.30832 17.6025 6.18052 17.4327 6.09901C17.2629 6.01751 17.0736 5.98562 16.8864 6.00701C16.6993 6.02839 16.522 6.10219 16.375 6.21991Z"
          fill="#A3A9B9"
        />
      </g>
      <defs>
        <filter
          id="filter0_d_1645_2"
          x="2"
          y="5.99854"
          width="20"
          height="20.0007"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="4" />
          <feGaussianBlur stdDeviation="2" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
          />
          <feBlend
            mode="normal"
            in2="BackgroundImageFix"
            result="effect1_dropShadow_1645_2"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect1_dropShadow_1645_2"
            result="shape"
          />
        </filter>
      </defs>
    </svg>
  );
};
export const TokenIcon: React.FunctionComponent<IconProps> = ({
  className,
  width,
  height,
}) => {
  return (
    <svg
      className={className}
      width={width}
      height={height}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M11.4 2.35001L6.25999 7.50001C6.05999 7.70001 6.05999 8.01001 6.25999 8.21001L7.98998 9.94001C8.18998 10.14 8.49998 10.14 8.69999 9.94001L13.85 4.79001C14.05 4.59001 14.05 4.28001 13.85 4.08001L12.12 2.35001C12.0225 2.25847 11.8937 2.20752 11.76 2.20752C11.6262 2.20752 11.4975 2.25847 11.4 2.35001Z"
        fill="#A3A9B9"
      />
      <path
        opacity="0.4"
        d="M15.3 6.26004L6.25999 15.3C6.05999 15.5 6.05999 15.81 6.25999 16.01L7.98998 17.74C8.18998 17.94 8.49998 17.94 8.69999 17.74L17.75 8.69004C17.95 8.49004 17.95 8.18004 17.75 7.98004L16.02 6.25004C15.9223 6.15754 15.7924 6.10682 15.658 6.10869C15.5235 6.11056 15.395 6.16487 15.3 6.26004Z"
        fill="#A3A9B9"
      />
      <path
        d="M19.21 10.162L10.16 19.212C9.96001 19.412 9.96001 19.722 10.16 19.922L11.89 21.652C12.09 21.852 12.4 21.852 12.6 21.652L21.65 12.602C21.85 12.402 21.85 12.092 21.65 11.892L19.92 10.162C19.72 9.96196 19.4 9.96196 19.21 10.162Z"
        fill="#A3A9B9"
      />
      <path
        opacity="0.4"
        d="M4.08996 13.84L2.35996 12.11C2.15996 11.91 2.15996 11.6 2.35996 11.4L4.08996 9.67002C4.28996 9.47002 4.59996 9.47002 4.79996 9.67002L6.52996 11.4C6.72996 11.6 6.72996 11.91 6.52996 12.11L4.79996 13.84C4.59996 14.04 4.27996 14.04 4.08996 13.84Z"
        fill="#A3A9B9"
      />
    </svg>
  );
};
export const TeleIcon: React.FunctionComponent<IconProps> = ({
  className,
  width,
  height,
}) => {
  return (
    <svg
      className={className}
      width={width}
      height={height}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clip-path="url(#clip0_1425_4349)">
        <path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M19.777 4.42997C20.0241 4.32596 20.2946 4.29008 20.5603 4.32608C20.826 4.36208 21.0772 4.46863 21.2877 4.63465C21.4982 4.80067 21.6604 5.02008 21.7574 5.27005C21.8543 5.52002 21.8825 5.79141 21.839 6.05597L19.571 19.813C19.351 21.14 17.895 21.901 16.678 21.24C15.66 20.687 14.148 19.835 12.788 18.946C12.108 18.501 10.025 17.076 10.281 16.062C10.501 15.195 14.001 11.937 16.001 9.99997C16.786 9.23897 16.428 8.79997 15.501 9.49997C13.198 11.238 9.50302 13.881 8.28102 14.625C7.20302 15.281 6.64102 15.393 5.96902 15.281C4.74302 15.077 3.60602 14.761 2.67802 14.376C1.42402 13.856 1.48502 12.132 2.67702 11.63L19.777 4.42997Z"
          
        />
      </g>
      <defs>
        <clipPath id="clip0_1425_4349">
          <rect width="24" height="24" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};
export const TwitterIcon: React.FunctionComponent<IconProps> = ({
  className,
  width,
  height,
}) => {
  return (
    <svg
      className={className}
      width={width}
      height={height}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clip-path="url(#clip0_1425_4348)">
        <path
          d="M14.058 3.40989C12.251 4.17689 11.063 5.86289 11.002 7.78989L11 7.97189L10.757 7.94889C8.36496 7.67989 6.25896 6.43689 4.81296 4.41789C4.71504 4.28105 4.58418 4.17114 4.4325 4.09832C4.28082 4.0255 4.11321 3.99213 3.9452 4.00131C3.77719 4.01048 3.61422 4.0619 3.47136 4.1508C3.32851 4.2397 3.21039 4.36321 3.12796 4.50989L3.03096 4.69589L2.98196 4.79489C2.26296 6.27989 1.79196 8.08489 1.96496 9.99789L1.99496 10.2709C2.27796 12.5339 3.49496 14.4859 5.77396 15.9499L5.94696 16.0569L5.86596 16.0999C4.55096 16.7629 3.34796 17.0519 2.03896 16.9999C0.982958 16.9599 0.592958 18.3719 1.52096 18.8779C5.11896 20.8389 8.98196 21.4439 12.313 20.4779C16.373 19.2979 19.465 16.2549 20.648 12.0449L20.775 11.5499C21.013 10.5569 21.147 9.54389 21.176 8.52589L21.179 8.19389L21.572 7.41489L22.012 6.55289L22.226 6.11889L22.344 5.87189C22.609 5.30689 22.8 4.83889 22.918 4.44189L22.932 4.38589L22.94 4.36789C23.16 3.77489 22.774 3.00989 21.999 3.00989L21.877 3.01689C21.798 3.0266 21.7204 3.04574 21.646 3.07389L21.56 3.11189C21.2746 3.25048 20.9806 3.37072 20.68 3.47189L20.324 3.58689L20.053 3.66689L19.281 3.88089C17.945 2.76289 16.137 2.62689 14.269 3.32689L14.058 3.40989Z"
        />
      </g>
      <defs>
        <clipPath id="clip0_1425_4348">
          <rect width="24" height="24" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};
